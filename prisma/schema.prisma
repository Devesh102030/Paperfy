generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(cuid())
  name            String?
  email           String    @unique
  password        String?   // must be optional for OAuth users
  image           String?
  emailVerified   DateTime?

  accounts        Account[]
  sessions        Session[]

  papers          Paper[]
  notes           Note[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user               User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Paper {
  id         String      @id @default(cuid())
  title      String
  content    String
  overview   String?
  pdfUrl     String
  status     String      @default("pending")
  createdAt  DateTime    @default(now())
  user       User        @relation(fields: [userId], references: [id])
  userId     String
  embeddings Embedding[]
  notes      Note[]
}

model Note {
  id        String   @id @default(cuid())
  content   String
  paper     Paper    @relation(fields: [paperId], references: [id])
  paperId   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
}

model Embedding {
  id        String   @id @default(cuid())
  chunk     String
  paper     Paper    @relation(fields: [paperId], references: [id])
  paperId   String
  createdAt DateTime @default(now())
}
